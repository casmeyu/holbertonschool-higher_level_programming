Matrix divided testis

Import modules:
	>>> matrix_divided = __import__("2-matrix_divided").matrix_divided
	>>> from sys import maxsize

Valid Tests
Test 1:
>>> matrix_divided([[1, 2, 3], [4, 5, 6]], 3)
[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

Test 2:
>>> matrix_divided([[1, 2, 3], [4, 5, 6]], -1)
[[-1.0, -2.0, -3.0], [-4.0, -5.0, -6.0]]

Test 3:
>>> matrix_divided([[3, 3.0, 3.5], [-2.0, 1, 10]], 2)
[[1.5, 1.5, 1.75], [-1.0, 0.5, 5.0]]

Invalid Tests
Test 4 (wrong divisor):
>>> matrix_divided([[1, 2, 3], [4, 5, 6]], 0)
Traceback (most recent call last):
    ....
ZeroDivisionError: division by zero

Test 5 (not a matrix):
>>> matrix_divided("not a matrix", 3)
Traceback (most recent call last):
    ...
TypeError: matrix must be a matrix (list of lists) of integers/floats

Test 6 (wrong matrix):
>>> matrix_divided([[1, 2, 3], ["a", "b", "c"]], 10)
Traceback (most recent call last):
    ...
TypeError: matrix must be a matrix (list of lists) of integers/floats

Test 7 (wrong matrix):
>>> matrix_divided([["a", 2, 3], [4, 5, 6]], 10)
Traceback (most recent call last):
    ...
TypeError: matrix must be a matrix (list of lists) of integers/floats

Test 8 (wrong matrix size):
>>> matrix_divided([[1, 2], [3, 4, 5]], 1)
Traceback (most recent call last):
    ...
TypeError: Each row of the matrix must have the same size

Test 9 (wrong matrix):
>>> matrix_divided(None, 1)
Traceback (most recent call last):
    ...
TypeError: matrix must be a matrix (list of lists) of integers/floats

Test 10 (wrong div):
>>> matrix_divided([[1, 2, 20], [3, 4, 5]], None)
Traceback (most recent call last):
    ...
TypeError: div must be a number

Test 11 (wrong div):
>>> matrix_divided([[1, 2, 3], [3, 4, 5]], "div")
Traceback (most recent call last):
    ...
TypeError: div must be a number
