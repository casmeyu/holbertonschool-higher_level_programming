Test cases for base geometry

Import modules
    >>> BaseGeometry = __import__('7-base_geometry').BaseGeometry

>>> bg = BaseGeometry()

Valid Tests
Test 1:
>>> bg.area()
Traceback (most recent call last):
    ...
Exception: area() is not implemented

>>> bg.integer_validator("name", "5")
Traceback (most recent call last):
    ...
TypeError: name must be an integer

>>>bg.integer_validator('name', -5)
Traceback (most recent call last):
    ...
ValueError: name must be greater than 0

>>>bg.integer_validator('name', 0)
Traceback (most recent call last):
    ...
ValueError: name must be greater than 0

>>> bg.integer_validator("name", 1, 2)
Traceback (most recent call last):
    ...
TypeError: integer_validator() takes 3 positional arguments but 4 were given

Passing tuple to method
    >>> bg = BaseGeometry()
    >>> bg.integer_validator("age", (4,))
    Traceback (most recent call last):
    	      ...
    TypeError: age must be an integer


Passing list to method
    >>> bg = BaseGeometry()
    >>> bg.integer_validator("age", [3])
    Traceback (most recent call last):
    	      ...
    TypeError: age must be an integer


Passing dict to method
    >>> bg = BaseGeometry()
    >>> bg.integer_validator("age", {3, 4})
    Traceback (most recent call last):
              ...
    TypeError: age must be an integer


Passing None to method
    >>> bg = BaseGeometry()
    >>> bg.integer_validator("age", None)
    Traceback (most recent call last):
              ...
    TypeError: age must be an integer
